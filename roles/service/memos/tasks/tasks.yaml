---
- name: Docker
  ansible.builtin.import_role: { name: docker }
  vars: { docker_users: ["{{ memos_owner }}"] }

- name: Compose
  become: true
  become_user: "{{ memos_owner }}"
  vars:
    compose_dir: "{{ memos_compose_dir | default(bookshelf_const_compose_dir + '/memos', true) }}"
    conf_dir: "{{ memos_conf_dir }}"
    service_state: "{{ memos_enabled | ternary('present', 'absent') }}"
  block:
    - name: Create compose directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0700'
      loop: ["{{ compose_dir }}", "{{ conf_dir }}"]

    - name: Create compose files
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ compose_dir }}/{{ item }}"
        mode: '0600'
      loop:
        - serve.json    # <- Must be first
        - compose.yaml
        - main.env
        - secret.env
      register: memos_compose_files_result

    - name: Apply service state
      community.docker.docker_compose_v2:
        project_src: "{{ compose_dir }}"
        state: "{{ service_state }}"
        remove_orphans: true
      register: memos_service_state

    - name: Restart service
      community.docker.docker_compose_v2:
        project_src: "{{ compose_dir }}"
        state: restarted
        remove_orphans: true
      when:
        - memos_enabled and not memos_service_state.changed
        - memos_tailscaled and memos_compose_files_result.results[0].changed

    - name: Create note
      ansible.builtin.import_role: { name: bookshelf-note }
      # noqa: var-naming[no-role-prefix]
      vars: { src: notes.md.j2, dest: memos-service.md, present: "{{ memos_enabled }}" }

- name: Mark done
  ansible.builtin.set_fact:
    memos_done: true
