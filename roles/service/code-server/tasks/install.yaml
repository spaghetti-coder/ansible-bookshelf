---
- name: Conf files
  become: true
  become_user: "{{ code_server_owner }}"
  vars:
    server_conffile: ~/.config/code-server/config.yaml
    user_conffile: ~/.local/share/code-server/User/settings.json
  block:
    - name: Create server config directory
      ansible.builtin.file:
        path: "{{ server_conffile | dirname }}"
        state: directory
        mode: '0700'

    # Server conf file before code-server installation to
    # apply ports before first start
    - name: Deploy server config file
      ansible.builtin.template:
        src: "{{ template }}"
        dest: "{{ server_conffile }}"
        mode: '0600'
      vars:
        template: "{{ code_server_custom_conf | default('config.yaml.j2', true) }}"
      register: code_server_server_conf_state

    - name: Create user settings directory
      ansible.builtin.file:
        path: "{{ user_conffile | dirname }}"
        state: directory
        mode: "{{ omit }}"
      register: code_server_user_settings_dir_state

    - name: Deploy user settings file
      ansible.builtin.template:   # noqa: no-handler
        src: "{{ code_server_user_conf }}"
        dest: "{{ user_conffile }}"
        mode: "{{ omit }}"
      vars:
        template: "{{ code_server_user_conf | default('sane.json.j2', true) }}"
      register: code_server_user_conf_state
      when: code_server_user_settings_dir_state.changed   # <- Only for initial install

- name: Get installed version
  ansible.builtin.shell:      # noqa: risky-shell-pipe
    cmd: /usr/bin/code-server --version | grep -o '^[0-9\.]\+'
  register: code_server_current_version
  changed_when: false
  failed_when: false

- name: Load OS specific install
  ansible.builtin.include_tasks:
    file: install.{{ factum_os_family }}-family.yaml
  vars:
    # Strip 'v' prefix
    version: "{{ code_server_version | default(bookshelf_const_version.code_server, true) | regex_replace('^v?(.*)$', '\\1') }}"
  when: version != code_server_current_version.stdout

- name: Apply service state
  ansible.builtin.service:
    name: code-server@{{ code_server_owner }}
    state: "{{ service_state }}"
    enabled: true
  vars:
    server_conf_changed: "{{ code_server_server_conf_state.changed }}"
    user_conf_changed: "{{ code_server_user_conf_state.changed | default(false) }}"
    service_state: "{{ (server_conf_changed or user_conf_changed) | ternary('restarted', 'started') }}"
  become: true

- name: Mark done
  ansible.builtin.set_fact:
    code_server_install_done: true
