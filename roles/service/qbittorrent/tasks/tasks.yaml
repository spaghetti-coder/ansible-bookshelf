---
- name: Docker
  ansible.builtin.import_role: { name: docker }
  vars: { docker_users: ["{{ qbittorrent_owner }}"] }

- name: Compose
  vars:
    compose_dir: "{{ qbittorrent_compose_dir | default(bookshelf_const_compose_dir + '/qbittorrent', true) }}"
    conf_dir: "{{ qbittorrent_conf_dir }}"
    data_dir: "{{ qbittorrent_data_dir }}"
    service_state: "{{ qbittorrent_enabled | ternary('present', 'absent') }}"
    the_user: "{{ getent_passwd[qbittorrent_user] }}"
    user_uid: "{{ the_user.1 }}"
    user_gid: "{{ the_user.2 }}"
  block:
    - name: Owner
      become: true
      become_user: "{{ qbittorrent_owner }}"
      block:
        - name: Create directories
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: '0700'
          loop:
            - "{{ compose_dir }}"
            - "{{ conf_dir }}"

        - name: Create main.env file
          ansible.builtin.template:
            src: main.env.j2
            dest: "{{ compose_dir }}/main.env"
            mode: '0600'

        - name: Create extra.env
          ansible.builtin.copy:
            content: |
              {{ qbittorrent_extra_env | default('', true) }}
            dest: "{{ compose_dir }}/extra.env"
            mode: '0600'

    - name: Create config directories   # <- Must belong to the 'user'
      ansible.builtin.file:
        path: "{{ conf_dir }}/{{ item }}"
        state: directory
        mode: '0700'
        owner: "{{ user_uid }}"
        group: "{{ user_gid }}"
      loop:
        - config
      become: true

    - name: Load downloaded hook apply state
      ansible.builtin.include_tasks: downloaded-hook-{{ state }}.yaml
      vars:
        state: "{{ qbittorrent_notify_provider | ternary('install', 'clean') }}"
        scripts_dir: "{{ conf_dir }}/scripts"

    - name: Create data directory
      ansible.builtin.file:
        path: "{{ data_dir }}"
        state: directory
        mode: "{{ omit }}"
      become: true
      become_user: "{{ qbittorrent_user }}"

    - name: Owner
      become: true
      become_user: "{{ qbittorrent_owner }}"
      block:
        - name: Compose apply
          ansible.builtin.import_role: { name: bookshelf-compose-apply }
          # noqa: var-naming[no-role-prefix]
          vars: { template: compose.yaml.j2, dest_dir: "{{ compose_dir }}", state: "{{ service_state }}" }

        - name: Create note
          ansible.builtin.import_role: { name: bookshelf-note }
          # noqa: var-naming[no-role-prefix]
          vars: { src: notes.md.j2, dest: qbittorrent-service.md }

- name: Mark done
  ansible.builtin.set_fact:
    qbittorrent_done: true
