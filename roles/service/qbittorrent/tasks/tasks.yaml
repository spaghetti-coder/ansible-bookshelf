---
- name: Docker
  ansible.builtin.import_role: { name: docker }
  vars: { docker_users: ["{{ qbittorrent_owner }}"] }

- name: Compose
  become: true
  become_user: "{{ qbittorrent_owner }}"
  vars:
    compose_dir: "{{ qbittorrent_compose_dir | default(bookshelf_const_compose_dir + '/qbittorrent', true) }}"
    extra_env: "{{ qbittorrent_extra_env }}"
    conf_dir: "{{ qbittorrent_conf_dir }}"
    data_dir: "{{ qbittorrent_data_dir }}"
    service_state: "{{ qbittorrent_enabled | ternary('present', 'absent') }}"
  block:
    - name: Create directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0700'
      loop:
        - "{{ compose_dir }}"
        - "{{ conf_dir }}"

    - name: Create main.env file
      ansible.builtin.template:
        src: main.env.j2
        dest: "{{ compose_dir }}/main.env"
        mode: '0600'

    - name: Remove obsolete extra.env
      ansible.builtin.file:
        path: "{{ compose_dir }}/extra.env"
        state: absent
      when: not extra_env

    - name: Create extra.env
      ansible.builtin.copy:
        content: |
          {{ extra_env }}
        dest: "{{ compose_dir }}/extra.env"
        mode: '0600'
      when: extra_env

    - name: Create data directory
      ansible.builtin.file:
        path: "{{ data_dir }}"
        state: directory
        mode: "{{ omit }}"

    - name: Load downloaded hook apply state
      ansible.builtin.include_tasks: downloaded-hook-{{ state }}.yaml
      vars:
        state: "{{ qbittorrent_downloaded_script | ternary('install', 'clean') }}"
        scripts_dir: "{{ compose_dir }}/scripts"

    - name: Compose apply
      ansible.builtin.import_role: { name: bookshelf-compose-apply }
      # noqa: var-naming[no-role-prefix]
      vars: { template: compose.yaml.j2, dest_dir: "{{ compose_dir }}", state: "{{ service_state }}" }

    - name: Create note
      ansible.builtin.import_role: { name: bookshelf-note }
      # noqa: var-naming[no-role-prefix]
      vars: { src: notes.md.j2, dest: qbittorrent-service.md }

- name: Mark done
  ansible.builtin.set_fact:
    qbittorrent_done: true
