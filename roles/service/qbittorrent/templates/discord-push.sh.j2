#!/usr/bin/env bash

# USAGE:
# qBittorrent UI -> Settings -> Downloads -> External ... on finished
#   /scripts/downloaded.sh "%N" "Downloaded" # <- "Downloaded" for message title
#
# NOTE: The script takes advantage of the linuxserver/qbittorrent image tools
#   * bash
#   * curl
#   * python3 / jq
# It may not work in other environments that don't have those

discord_push_config() {
  `# Expected content:`
  `#   DISCORD_TOKEN='<HOOK_ID>/<HOOK_TOKEN>' # <- (REQUIRED) From discord channel`
  . "$(dirname -- "${0}")/downloaded.secret.sh"
}

# USAGE:
#   discord_push MESSAGE [TITLE]
# DEMO:
#   discord_push "Hello world" "Message title header"
discord_push() (
  # Obtain connection settings from config callback or from env vars
  local DISCORD_TOKEN="${DISCORD_TOKEN}"
  declare -F discord_push_config &>/dev/null && discord_push_config

  main() {
    local message="${1}"; message="$(json_quote "${message}")"  || return
    local title="${2}"
    local endpoint=https://discord.com/api/webhooks; endpoint+="/$(urlencode "${DISCORD_TOKEN}")" || return

    local embeds='"description": '"${message}"
    [ -n "${title}" ] && { embeds+=', "title": '"$(json_quote "${title}")" || return; }

    # https://birdie0.github.io/discord-webhooks-guide/, https://wchesley.dev/posts/discord_curl_notifications/
    curl -sSL -X POST -H 'Content-Type: application/json' \
      --data '{ "embeds": [{ '"${embeds}"' }] }' \
      -- "${endpoint}"
  }

  # USAGE:
  #   json_quote STRING         # <- Wirh argument
  #   echo STRING | json_quote  # <- Wirh stdin
  # Requires python3 or jq. https://stackoverflow.com/a/50380697, https://stackoverflow.com/a/13466143
  json_quote() {
    local -a quote_cmd=(python3 -c 'import json,sys; print(json.dumps(sys.stdin.read()))')
    python3 --version >/dev/null 2>&1 || quote_cmd=(jq -Rsa .)
    jq --version >/dev/null 2>&1 || { echo "Required python3 or jq" >&2; return 1; }
    printf -- '%s' "${1-$(cat)}" | "${quote_cmd[@]}"
  }

  # USAGE:
  #   urlencode STRING          # <- Wirh argument
  #   echo STRING | urlencode   # <- Wirh stdin
  # DEMO:
  #   echo "https://sample.com/?q=$(urlencode "foo bar")"
  # Requires python3 or jq. https://stackoverflow.com/a/34407620, https://stackoverflow.com/a/62788692
  urlencode() {
    local -a encode_cmd=(python3 -c 'import urllib.parse,sys; print(urllib.parse.quote(sys.stdin.read()))')
    python3 --version >/dev/null 2>&1 || encode_cmd=(jq -sRr '@uri')
    jq --version >/dev/null 2>&1 || { echo "Required python3 or jq" >&2; return 1; }
    printf -- '%s' "${1-$(cat)}" | "${encode_cmd[@]}"
  }

  main "${@}"
)

(return 2>/dev/null) || discord_push "${@}"
