{% set version = (cronmaster_version | default(bookshelf_const_version.cronmaster, true)) %}
{% set web_ui_port = (cronmaster_web_ui_port | default(bookshelf_const_port.cronmaster.web_ui, true)) %}
---
{{ lookup('template', './../../tailscale/partial/sidecar-compose.yaml.j2', template_vars=dict(
  ts_version = cronmaster_ts_version | default(bookshelf_const_version.cronmaster_tailscale, true),
  ts_name = cronmaster_ts_service_name, ts_conf_dir = conf_dir + '/tailscale'
)) }}

services:
  app:
    # https://github.com/fccview/cronmaster/pkgs/container/cronmaster
    image: ghcr.io/fccview/cronmaster:{{ version }}
    container_name: {{ cronmaster_service_name }}
    restart: unless-stopped
    env_file:
      - secret.env
      - main.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock   # <- To execute commands on host
      - ./scripts:/app/scripts                      # <- Host directory must remain ./scripts
      - ./snippets:/app/snippets
      - ./secrets:/secrets
      - '{{ conf_dir }}/config:/app/data'
    user: "root"                                    # <- root required to evaluate cron jobs
    pid: "host"                                     # <- For host command execution
    privileged: true                                # <- For nsenter access
    init: true
    # platform: linux/arm64                         # <- Uncomment to use ARM64
{% if cronmaster_tailscaled %}
    network_mode: "service:tailscale"

  tailscale:
    <<: *tailscale
{% endif %}{# cronmaster_tailscaled #}
    hostname: {{ cronmaster_hostname }}
{% if web_ui_port | int > -1 %}
    ports:
      - "{{ web_ui_port }}:{{ cronmaster_web_ui_port_int }}"
{% else %}
    # ports:
    #   - "{{ web_ui_port }}:{{ cronmaster_web_ui_port_int }}"
{% endif %}
{% if not (nginx_proxy_enabled | default(false)) %}
    network_mode: bridge    # <- Avoid creating default compose network
{% else %}
    environment:
      - VIRTUAL_HOST={{ cronmaster_vhost }}
      - VIRTUAL_PORT={{ cronmaster_web_ui_port_int }}
    networks:
      - {{ nginx_proxy_net }}

networks:
  {{ nginx_proxy_net }}:
    external: true
{% endif %}{# nginx_proxy_enabled #}
