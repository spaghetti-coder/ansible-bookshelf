{% set version = navidrome_version | default(bookshelf_const_version.navidrome, true) %}
{% set web_ui_port = navidrome_web_ui_port | default(bookshelf_const_port.navidrome.web_ui, true) %}
{% set data_volumes = (navidrome_user == navidrome_owner)
    | ternary(navidrome_data_volumes, data_volumes_abs) | default([], true) %}
---
{{ lookup('template', './../../tailscale/partial/sidecar-compose.yaml.j2', template_vars=dict(
  ts_version = navidrome_ts_version | default(bookshelf_const_version.navidrome_tailscale, true),
  ts_name = navidrome_ts_service_name, ts_conf_dir = conf_dir + '/tailscale'
)) }}

services:
  app:
    # https://hub.docker.com/r/deluan/navidrome/tags
    image: deluan/navidrome:{{ version }}
    container_name: {{ navidrome_service_name }}
    restart: unless-stopped
    env_file:
      - ./secret.env
      - ./main.env
    volumes:
{% for volume in data_volumes %}
      - '{{ volume }}'
{% endfor %}
      - '{{ conf_dir }}/config:/data'
    user: "{{ user_uid }}:{{ user_gid }}"
{% if navidrome_tailscaled %}
    network_mode: "service:tailscale"

  tailscale:
    <<: *tailscale
{% endif %}{# navidrome_tailscaled #}
    hostname: {{ navidrome_hostname }}
{% if web_ui_port | int > -1 %}
    ports:
      - '{{ web_ui_port }}:{{ navidrome_web_ui_port_int }}'
{% else %}
    # ports:
    #   - '{{ web_ui_port }}:{{ navidrome_web_ui_port_int }}'
{% endif %}{# navidrome_web_ui_ports_exposed #}
{% if not (nginx_proxy_enabled | default(false)) %}
    network_mode: bridge    # <- Avoid creating default compose network
{% else %}
    environment:
      - VIRTUAL_HOST={{ navidrome_vhost }}
      - VIRTUAL_PORT={{ navidrome_web_ui_port_int }}
    networks:
      - {{ nginx_proxy_net }}

networks:
  {{ nginx_proxy_net }}:
    external: true
{% endif %}{# nginx_proxy_enabled #}
