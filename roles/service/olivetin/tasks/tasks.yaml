---
- name: Docker
  ansible.builtin.import_role: { name: docker }
  vars: { docker_users: ["{{ olivetin_owner }}"] }

- name: Compose
  become: true
  become_user: "{{ olivetin_owner }}"
  vars:
    compose_dir: "{{ olivetin_compose_dir | default(bookshelf_const_compose_dir + '/olivetin', true) }}"
    conf_dir: "{{ olivetin_conf_dir }}"
    conf_dir_config: "{{ olivetin_conf_dir }}/config"
    conf_dir_etc: "{{ olivetin_conf_dir }}/etc"
    service_state: "{{ olivetin_enabled | ternary('present', 'absent') }}"
    main_config: "{{ olivetin_config | default(lookup('file', 'config.yaml'), true) }}"
    scripts_dir: "{{ compose_dir }}/scripts"
    # Required in both config.yaml and compose.yaml
    web_ui_port: "{{ olivetin_web_ui_port | default(bookshelf_const_port.olivetin.web_ui, true) }}"
  block:
    - name: Create directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0700'
      loop:
        - "{{ compose_dir }}"
        - "{{ scripts_dir }}"
        - "{{ conf_dir_config }}"
        - "{{ conf_dir_etc }}"

    - name: Deploy scripts
      ansible.builtin.copy:
        content: |
          {{ item.text }}
        dest: "{{ scripts_dir }}/{{ item.name }}"
        mode: "{{ item.mode | default('0755', true) }}"
      loop: "{{ olivetin_scripts | default([], true) }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Deploy config file
      ansible.builtin.copy:
        content: |
          {{ main_config }}

          {{ lookup('template', 'config.base.yaml.j2') }}
        dest: "{{ conf_dir_etc }}/config.yaml"
        mode: '0600'

    - name: Compose apply
      ansible.builtin.import_role: { name: bookshelf-compose-apply }
      # noqa: var-naming[no-role-prefix]
      vars: { template: compose.yaml.j2, dest_dir: "{{ compose_dir }}", state: "{{ service_state }}" }
- name: Mark done
  ansible.builtin.set_fact:
    olivetin_done: true
