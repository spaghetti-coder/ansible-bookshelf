---
# Automated developer-oriented status page.
#   https://github.com/TwiN/gatus
# -----
# VERSIONS:
#   * https://github.com/twin/gatus/pkgs/container/gatus
#   * https://hub.docker.com/_/postgres/tags?name=alpine
#   * => See tailscale role versions
# -----
gatus_managed: false
gatus_enabled: false
gatus_version:            # Leave blank to leverage bookshelf configuration
gatus_compose_dir:        # Unless you know ..., leave blank to leverage bookshelf configuration
gatus_owner: "{{ ansible_user_id }}"
gatus_conf_dir: ~/conf/gatus
gatus_service_name: gatus
gatus_hostname: "{{ gatus_service_name }}"
gatus_vhost: "{{ gatus_service_name }}.domain.local"
gatus_web_ui_port:        # Leave blank to leverage bookshelf configuration
gatus_tz: "{{ ansible_date_time.tz | default('UTC') }}"
gatus_config: "{{ lookup('file', 'demo.yaml') }}"   # <- (REQUIRED) Replace with yours
# Optional extra env vars, will affect both Gatus and Tailscale.
gatus_extra_env: |        # "{{ lookup('template', playbook_dir + '/resources/gatus.env.j2') }}"
  # Gatus allows $ENV_VAR in the config files
  # ----------
  # SOME_VAR=some-val
gatus_secrets_env: |      # "{{ lookup('template', playbook_dir + '/resources/gatus.secret.env.j2') }}"
  # Same as extra env, but for secrets
  # ----------
  # SOME_SECRET_VAR=some-secret
# ----------
# Disable if plan to access only via tailnet or reverse-proxy
gatus_web_ui_ports_exposed: true
# ----------
# The following settings configure Gatus to run as a part of tailnet
#
# IMPORTANT 1: See IMPORTANTs in tailscale service description
gatus_tailscaled: false
gatus_ts_version:   # Leave blank to leverage bookshelf configuration
gatus_ts_service_name: "{{ gatus_service_name }}-ts"
# Hostname within tailnet
gatus_ts_hostname: "{{ gatus_service_name }}"
gatus_ts_auth_key:
