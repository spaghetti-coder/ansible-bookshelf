{% set version = (wg_easy_version | default(bookshelf_const_version.wg_easy, true)) %}
{% set web_ui_port = (wg_easy_web_ui_port | default(bookshelf_const_port.wg_easy.web_ui, true)) %}
---
services:
  wg-easy:
    # https://github.com/wg-easy/wg-easy/pkgs/container/wg-easy/versions?filters%5Bversion_type%5D=tagged
    image: ghcr.io/wg-easy/wg-easy:{{ version }}
    container_name: {{ wg_easy_service_name }}
    restart: unless-stopped
    env_file:
      - ./main.env
    volumes:
      - '{{ conf_dir }}/config:/etc/wireguard'
      # - /lib/modules:/lib/modules:ro    # <- Don't know what it's for
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
      # - NET_RAW                           # <- Uncomment for Podman
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv6.conf.all.disable_ipv6=0
      - net.ipv6.conf.all.forwarding=1
      - net.ipv6.conf.default.forwarding=1
    hostname: {{ wg_easy_hostname }}
    ports:
      - "{{ wg_easy_udp_port }}:51820/udp"
      - "{{ web_ui_port }}:51821/tcp"     # <- Web-UI
{% if not (nginx_proxy_enabled | default(false)) %}
    network_mode: bridge    # <- Avoid creating default compose network
{% else %}
    environment:
      - VIRTUAL_HOST={{ wg_easy_vhost }}
      - VIRTUAL_PORT=51821
    networks:
      - {{ nginx_proxy_net }}

networks:
  {{ nginx_proxy_net }}:
    external: true
{% endif %}{# nginx_proxy_enabled #}
